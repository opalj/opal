/* BSD 2-Clause License - see OPAL/LICENSE for details. */
package controlflow;

/**
 * Created to test the computation of control flow graphs.
 * 
 * @author Erich Wittenbeck
 */
public class WideCode {

    public int wide(boolean b) {
        int res = 0;
        if (b) {
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
            res++;
        } else {
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;
            res--;

        }

        return res;
    }
}
