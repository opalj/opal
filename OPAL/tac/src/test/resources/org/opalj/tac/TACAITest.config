# Specification of the results of a 3-address code transformation
# Each test is specified as follows (all values are required and have to be in the given order):
#   project:    <name of the bi project jar file; e.g., ai-9.jar>
#   jdk:        [no, api, complete]
#   class:      <name of the test class>
#   method:     <name of the test method>
#   test:       <main goal of the test/test subject>
#   domain:     <name of the class of the domain that should be used as the foundation>

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithExceptions
method:     withFinallyAndThrows
test:       the information related to handled exceptions is complete
domain:     org.opalj.ai.domain.l0.PrimitiveTACAIDomain

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithExceptions
method:     exceptionsWithMultipleReasonsForNull
test:       we can distinguish between NullPointerExceptions thrown by a called method and those thrown by the JVM when the receiver is null and when we use provided origin information
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithExceptions
method:     exceptionsWithMultipleReasonsForNull
test:       we can distinguish between NullPointerExceptions thrown by a called method and those thrown by the JVM when the RecordDefUse domains has to compute the information
domain:     org.opalj.ai.domain.l0.PrimitiveTACAIDomain

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithExceptions
method:     differentExceptionsHandledBySameHandler
test:       all exceptions that may be raised are caught
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithExceptions
method:     differentExceptionsRelatedToArraysHandledBySameHandler
test:       all exceptions that may be raised - depending on the taken path - are caught
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        no
class:      ai.MethodsPlain
method:     identity
test:       the first parameter of a static method should have id -2
domain:     org.opalj.ai.domain.l0.PrimitiveTACAIDomain

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithExceptions
method:     alwaysCatch
test:       if we have a catch handler which catches a given and explictily thrown exception then the origin should identify the respective parameter
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        api
class:      ai.MethodsWithExceptions
method:     extensiveCatchGame
test:       complex case of catching and storing exceptions
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        complete
class:      ai.domain.StringValues
method:     sb
test:       inlining "trivial" method calls and using origin based def/use information should enable more precise tracking of instances
domain:     org.opalj.ai.domain.l2.DefaultPerformInvocationsDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        complete
class:      ai.domain.StringValues
method:     build
test:       chained method calles ("Builder Pattern")
domain:     org.opalj.ai.domain.l2.DefaultPerformInvocationsDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        api
class:      ai.MethodsWithExceptions
method:     nestedTryFinally
test:       handling of dead exceptions (the underlying source code contains nested try-finally->try-finally code, with "non-null" tests, which results in effectively dead code)
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        api
class:      ai.MethodsWithExceptions
method:     exceptionAsControlFlow
test:       (mis)using exceptions to control a method's flow
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        api
class:      ai.MethodsWithExceptions
method:     onlyNewNoInitDueToException
test:       that the new is not stripped away if the init is never executed
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithArrays
method:     threeElements
test:       no exceptions are thrown
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithArrays
method:     arrayIndexOutOfBounds
test:       in case of a very simple index out of bounds an exception is always thrown
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithArrays
method:     arrayIndexOutOfBoundsInLoop
test:       in case of a loop an array index out of bounds exception is definitively thrown
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithArrays
method:     referenceToMultipleArrays
test:       array values are correctly stored in a MultipleReferenceValues
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse

project:    ai-9.jar
jdk:        no
class:      ai.MethodsWithExceptions
method:     withFinallyAndThrows
test:       the information related to handled exceptions is complete
domain:     org.opalj.ai.domain.l1.DefaultDomainWithCFGAndDefUse
