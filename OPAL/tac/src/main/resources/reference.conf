org.opalj {
  tacai {
    performConstantPropagation = false
  },
  fpcf {
    registry {
      analyses {
        #"EntryPointsAnalysis" {
        #  description = "Computes the entry points of the project w.r.t. to the given analysis mode.",
        #  eagerFactory = "org.opalj.fpcf.analyses.EntryPointsAnalysis"
        #},
        "L0TACAIAnalysis" {
          description = "Performs an abstract interpretation using the configured domain and then computes the 3-address code.",
          eagerFactory = "org.opalj.tac.fpcf.analyses.EagerL0TACAIAnalysis",
          lazyFactory = "org.opalj.tac.fpcf.analyses.LazyL0TACAIAnalysis"
        },
        "L1FieldMutabilityAnalysis" {
          description = "Determines if (instance and static) fields are (effectively) final.",
          eagerFactory = "org.opalj.tac.fpcf.analyses.EagerL1FieldMutabilityAnalysis",
          lazyFactory = "org.opalj.tac.fpcf.analyses.LazyL1FieldMutabilityAnalysis"
        },
        "SimpleEscapeAnalysis" {
          description = "Determines whether objects escape a method.",
          eagerFactory = "org.opalj.tac.fpcf.analyses.escape.EagerSimpleEscapeAnalysis",
          lazyFactory = "org.opalj.tac.fpcf.analyses.escape.LazySimpleEscapeAnalysis"
        },
        "InterProceduralEscapeAnalysis" {
          description = "Determines whether objects escape a method.",
          eagerFactory = "org.opalj.tac.fpcf.analyses.escape.EagerInterProceduralEscapeAnalysis",
          lazyFactory = "org.opalj.tac.fpcf.analyses.escape.LazyInterProceduralEscapeAnalysis"
        },
        "FieldLocalityAnalysis" {
          description = "Determines if a field's lifetime is bound to its owning instance.",
          eagerFactory = "org.opalj.tac.fpcf.analyses.EagerFieldLocalityAnalysis",
          lazyFactory = "org.opalj.tac.fpcf.analyses.LazyFieldLocalityAnalysis"
        },
        "ReturnValueFreshnessAnalysis" {
          description = "Determines if a method's return value is always freshly allocated.",
          eagerFactory = "org.opalj.tac.fpcf.analyses.escape.EagerReturnValueFreshnessAnalysis",
          lazyFactory = "org.opalj.tac.fpcf.analyses.escape.LazyReturnValueFreshnessAnalysis"
        },
        "L1PurityAnalysis" {
          description = "Determines a method's purity.",
          eagerFactory = "org.opalj.tac.fpcf.analyses.purity.EagerL1PurityAnalysis",
          lazyFactory = "org.opalj.tac.fpcf.analyses.purity.LazyL1PurityAnalysis"
        },
        "L2PurityAnalysis" {
          description = "Determines a method's purity.",
          eagerFactory = "org.opalj.tac.fpcf.analyses.purity.EagerL2PurityAnalysis",
          lazyFactory = "org.opalj.tac.fpcf.analyses.purity.LazyL2PurityAnalysis"
        }
      }
    },
    analyses {
      ConfigurationBasedConstructorEscapeAnalysis {
        constructors = [
          {
            object_type = "java/lang/Object",
            escape_of_this = "org.opalj.br.fpcf.properties.NoEscape"
          },
          {
            object_type = "java/lang/Throwable",
            escape_of_this = "org.opalj.br.fpcf.properties.EscapeInCallee"
          }, {
            object_type = "java/lang/Exception",
            escape_of_this = "org.opalj.br.fpcf.properties.EscapeInCallee"
          },
          {
            object_type = "java/lang/IllegalStateException",
            escape_of_this = "org.opalj.br.fpcf.properties.EscapeInCallee"
          },
          {
            object_type = "java/lang/IllegalArgumentException",
            escape_of_this = "org.opalj.br.fpcf.properties.EscapeInCallee"
          },
          {
            object_type = "java/lang/RuntimeException",
            escape_of_this = "org.opalj.br.fpcf.properties.EscapeInCallee"
          }
        ]
      },
      L1PurityAnalysis {
        domainSpecificRater = "org.opalj.tac.fpcf.analyses.purity.SystemOutLoggingAllExceptionRater"
      },
      L2PurityAnalysis {
        domainSpecificRater = "org.opalj.tac.fpcf.analyses.purity.SystemOutLoggingAllExceptionRater"
      },
      ConfiguredPurity {
        purities = [
          # Native methods
          # All methods of the following types have been analyzed, methods not listed are
          # considered impure
          {cf = "java/lang/Class", m = "desiredAssertionStatus0", desc = "(Ljava/lang/Class;)Z", p = "SideEffectFree"},
          {cf = "java/lang/Class", m = "getPrimitiveClass", desc = "(Ljava/lang/String;)Ljava/lang/Class;", p = "SideEffectFree"},
          {cf = "java/lang/Class", m = "getComponentType", desc = "()Ljava/lang/Class;", p = "Pure"},
          {cf = "java/lang/Class", m = "getConstantPool", desc = "()Lsun/reflect/ConstantPool;", p = "Pure"},
          {cf = "java/lang/Class", m = "getDeclaredClasses0", desc = "()[Ljava/lang/Class;", p = "SideEffectFree"},
          {cf = "java/lang/Class", m = "getDeclaredConstructors0", desc = "(Z)[Ljava/lang/reflect/Constructor;", p = "Pure"},
          {cf = "java/lang/Class", m = "getDeclaredFields0", desc = "(Z)[Ljava/lang/reflect/Field;", p = "Pure"},
          {cf = "java/lang/Class", m = "getDeclaredMethods0", desc = "(Z)[Ljava/lang/reflect/Method;", p = "Pure"},
          {cf = "java/lang/Class", m = "getDeclaringClass0", desc = "()Ljava/lang/Class;", p = "Pure"},
          {cf = "java/lang/Class", m = "getEnclosingMethod0", desc = "()[Ljava/lang/Object;", p = "Pure"},
          {cf = "java/lang/Class", m = "getGenericSignature0", desc = "()Ljava/lang/String;", p = "Pure"},
          {cf = "java/lang/Class", m = "getInterfaces0", desc = "()[Ljava/lang/Class;", p = "Pure"},
          {cf = "java/lang/Class", m = "getModifiers", desc = "()I", p = "CompileTimePure"},
          {cf = "java/lang/Class", m = "getName0", desc = "()Ljava/lang/String;", p = "Pure"},
          {cf = "java/lang/Class", m = "getProtectionDomain", desc = "()Ljava/security/ProtectionDomain;", p = "SideEffectFree"},
          {cf = "java/lang/Class", m = "getRawAnnotations", desc = "()[B", p = "SideEffectFree"},
          {cf = "java/lang/Class", m = "getRawTypeAnnotations", desc = "()[B", p = "SideEffectFree"},
          {cf = "java/lang/Class", m = "getSigners", desc = "()[Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/Class", m = "getSuperclass", desc = "()Ljava/lang/Class;", p = "SideEffectFree"},
          {cf = "java/lang/Class", m = "isArray", desc = "()Z", p = "CompileTimePure"},
          {cf = "java/lang/Class", m = "isAssignableFrom", desc = "(Ljava/lang/Class;)Z", p = "SideEffectFree"},
          {cf = "java/lang/Class", m = "isInstance", desc = "(Ljava/lang/Object;)Z", p = "CompileTimePure"},
          {cf = "java/lang/Class", m = "isInterface", desc = "()Z", p = "CompileTimePure"},
          {cf = "java/lang/Class", m = "isPrimitive", desc = "()Z", p = "CompileTimePure"},
          {cf = "java/lang/Class", m = "setSigners", desc = "([Ljava/lang/Object;)V", p = "ContextuallyPure{0}"},
          {cf = "java/lang/Double", m = "doubleToRawLongBits", desc = "(D)J", p = "CompileTimePure"},
          {cf = "java/lang/Double", m = "longBitsToDouble", desc = "(J)D", p = "CompileTimePure"},
          {cf = "java/lang/Float", m = "floatToRawIntBits", desc = "(F)I", p = "CompileTimePure"},
          {cf = "java/lang/Float", m = "intBitsToFloat", desc = "(I)F", p = "CompileTimePure"},
          {cf = "java/lang/Object", m = "<init>", desc = "()V", p = "CompileTimePure"},
          {cf = "java/lang/Object", m = "clone", desc = "()Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/Object", m = "getClass", desc = "()Ljava/lang/Class;", p = "SideEffectFree"},
          {cf = "java/lang/Object", m = "hashCode", desc = "()I", p = "SideEffectFree"},
          {cf = "java/lang/Package", m = "getSystemPackage0", desc = "(Ljava/lang/String;)Ljava/lang/String;", p = "SideEffectFree"},
          {cf = "java/lang/Package", m = "getSystemPackages0", desc = "()[Ljava/lang/String;", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "get", desc = "(Ljava/lang/Object;I)Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "getBoolean", desc = "(Ljava/lang/Object;I)Z", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "getByte", desc = "(Ljava/lang/Object;I)B", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "getChar", desc = "(Ljava/lang/Object;I)C", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "getDouble", desc = "(Ljava/lang/Object;I)D", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "getFloat", desc = "(Ljava/lang/Object;I)F", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "getInt", desc = "(Ljava/lang/Object;I)I", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "getLength", desc = "(Ljava/lang/Object;)I", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "getLong", desc = "(Ljava/lang/Object;I)J", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "getShort", desc = "(Ljava/lang/Object;I)S", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "multiNewArray", desc = "(Ljava/lang/Class;[I)Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "newArray", desc = "(Ljava/lang/Class;I)Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Array", m = "set", desc = "(Ljava/lang/Object;ILjava/lang/Object;)V", p = "ContextuallySideEffectFree{1}"},
          {cf = "java/lang/reflect/Array", m = "setBoolean", desc = "(Ljava/lang/Object;IZ)V", p = "ContextuallySideEffectFree{1}"},
          {cf = "java/lang/reflect/Array", m = "setByte", desc = "(Ljava/lang/Object;IB)V", p = "ContextuallySideEffectFree{1}"},
          {cf = "java/lang/reflect/Array", m = "setChar", desc = "(Ljava/lang/Object;IC)V", p = "ContextuallySideEffectFree{1}"},
          {cf = "java/lang/reflect/Array", m = "setDouble", desc = "(Ljava/lang/Object;ID)V", p = "ContextuallySideEffectFree{1}"},
          {cf = "java/lang/reflect/Array", m = "setFloat", desc = "(Ljava/lang/Object;IF)V", p = "ContextuallySideEffectFree{1}"},
          {cf = "java/lang/reflect/Array", m = "setInt", desc = "(Ljava/lang/Object;II)V", p = "ContextuallySideEffectFree{1}"},
          {cf = "java/lang/reflect/Array", m = "setLong", desc = "(Ljava/lang/Object;IJ)V", p = "ContextuallySideEffectFree{1}"},
          {cf = "java/lang/reflect/Array", m = "setShort", desc = "(Ljava/lang/Object;IS)V", p = "ContextuallySideEffectFree{1}"},
          {cf = "java/lang/reflect/Executable", m = "getParameters0", desc = "()[Ljava/lang/reflect/Parameter;", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Executable", m = "getTypeAnnotationBytes0", desc = "()[B", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Field", m = "getTypeAnnotationBytes0", desc = "()[B", p = "SideEffectFree"},
          {cf = "java/lang/Runtime", m = "availableProcessors", desc = "()I", p = "SideEffectFree"},
          {cf = "java/lang/Runtime", m = "freeMemory", desc = "()J", p = "SideEffectFree"},
          {cf = "java/lang/Runtime", m = "maxMemory", desc = "()J", p = "SideEffectFree"},
          {cf = "java/lang/Runtime", m = "totalMemory", desc = "()J", p = "SideEffectFree"},
          {cf = "java/lang/SecurityManager", m = "classLoaderDepth0", desc = "()I", p = "SideEffectFree"},
          {cf = "java/lang/SecurityManager", m = "currentClassLoader0", desc = "()Ljava/lang/ClassLoader;", p = "SideEffectFree"},
          {cf = "java/lang/SecurityManager", m = "currentLoadedClass0", desc = "()Ljava/lang/Class;", p = "SideEffectFree"},
          {cf = "java/lang/SecurityManager", m = "getClassContext", desc = "()[Ljava/lang/Class;", p = "SideEffectFree"},
          {cf = "java/lang/SecurityManager", m = "classDepth", desc = "(Ljava/lang/String;)I", p = "SideEffectFree"},
          {cf = "java/lang/StrictMath", m = "IEEEremainder", desc = "(DD)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "acos", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "asin", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "atan", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "atan2", desc = "(DD)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "cbrt", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "cos", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "cosh", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "exp", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "expm1", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "hypot", desc = "(DD)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "log", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "log10", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "log1p", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "pow", desc = "(DD)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "sin", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "sinh", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "sqrt", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "tan", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/StrictMath", m = "tanh", desc = "(D)D", p = "CompileTimePure"},
          {cf = "java/lang/String", m = "intern", desc = "()Ljava/lang/String;", p = "SideEffectFree"},
          {cf = "java/lang/System", m = "arraycopy", desc = "(Ljava/lang/Object;ILjava/lang/Object;II)V", p = "ContextuallySideEffectFree{3}"},
          {cf = "java/lang/System", m = "currentTimeMillis", desc = "()J", p = "SideEffectFree"},
          {cf = "java/lang/System", m = "identityHashCode", desc = "(Ljava/lang/Object;)I", p = "Pure"},
          {cf = "java/lang/System", m = "mapLibraryName", desc = "(Ljava/lang/String;)Ljava/lang/String;", p = "SideEffectFree"},
          {cf = "java/lang/System", m = "nanoTime", desc = "()J", p = "SideEffectFree"},
          {cf = "java/lang/Thread", m = "currentThread", desc = "()Ljava/lang/Thread;", p = "SideEffectFree"},
          {cf = "java/lang/Thread", m = "getThreads", desc = "()[Ljava/lang/Thread;", p = "SideEffectFree"},
          {cf = "java/lang/Thread", m = "holdsLock", desc = "(Ljava/lang/Object;)Z", p = "SideEffectFree"},
          {cf = "java/lang/Thread", m = "countStackFrames", desc = "()I", p = "SideEffectFree"},
          {cf = "java/lang/Thread", m = "isAlive", desc = "()Z", p = "SideEffectFree"},
          {cf = "java/lang/Thread", m = "isInterrupted", desc = "(Z)Z", p = "SideEffectFree"},
          {cf = "java/lang/Throwable", m = "<init>", desc = "*", p = "SideEffectFree"},
          {cf = "java/lang/Throwable", m = "fillInStackTrace", desc = "(I)Ljava/lang/Throwable;", p = "SideEffectFree"},
          {cf = "java/lang/Throwable", m = "getStackTraceDepth", desc = "()I", p = "SideEffectFree"},
          {cf = "java/lang/Throwable", m = "getStackTraceElement", desc = "(I)Ljava/lang/StackTraceElement;", p = "SideEffectFree"},
          {cf = "java/util/TimeZone", m = "getSystemGMTOffsetID", desc = "()Ljava/lang/String;", p = "SideEffectFree"},
          {cf = "java/util/TimeZone", m = "getSystemTimeZoneID", desc = "(Ljava/lang/String;)Ljava/lang/String;", p = "SideEffectFree"},
          {cf = "java/util/logging/FileHandler", m = "isSetUID", desc = "()Z", p = "Pure"},
          # Java methods
          {cf = "java/lang/Double", m = "toString", "desc" = "(D)Ljava/lang/String;", p = "Pure"},
          {cf = "java/lang/Float", m = "toString", "desc" = "(F)Ljava/lang/String;", p = "Pure"},
          {cf = "java/lang/Integer", m = "toString", "desc" = "(I)Ljava/lang/String;", p = "Pure"},
          {cf = "java/lang/Integer", m = "toString", "desc" = "(II)Ljava/lang/String;", p = "Pure"},
          {cf = "java/lang/Long", m = "toString", "desc" = "(J)Ljava/lang/String;", p = "Pure"},
          {cf = "java/lang/Long", m = "toString", "desc" = "(JI)Ljava/lang/String;", p = "Pure"},
          {cf = "java/lang/Object", m = "equals", desc = "(Ljava/lang/Object;)Z", p = "SideEffectFree"},
          {cf = "java/lang/String", m = "hashCode", desc = "()I", p = "Pure"},
          //TODO BigDecimal.setScale
          {cf = "java/lang/StringBuffer", m = "append", desc = "*", p = "ContextuallyPure{0}"},
          {cf = "java/lang/StringBuffer", m = "toString", desc = "()Ljava/lang/String;", p = "SideEffectFree"},
          {cf = "java/lang/StringBuilder", m = "append", desc = "*", p = "ContextuallyPure{0}"},
          {cf = "java/lang/StringBuilder", m = "toString", desc = "()Ljava/lang/String;", p = "SideEffectFree"},
          # Treat all implementations of the following methods as pure
          //{cf = "*", m = "hashCode", desc = "()I", p = "Pure"},
          //{cf = "*", m = "hashCode", desc = "()I", p = "VPure"},
          //{cf = "*", m = "equals", desc = "(Ljava/lang/Object;)Z", p = "Pure"},
          //{cf = "*", m = "equals", desc = "(Ljava/lang/Object;)Z", p = "VPure"}
          {cf = "*", m = "compareTo", desc = "*", p = "Pure"},
          {cf = "*", m = "compareTo", desc = "*", p = "VPure"},
          # These methods may invoke arbitrary method, but should be considered side-effect free if
          # the reflection related calls is scheduled
          {cf = "java/lang/Class", "m" = "forName", desc = "(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;", p = "SideEffectFree"},
          {cf = "java/lang/Class", "m" = "newInstance", desc = "()Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Constructor", "m" = "newInstance", desc = "([Ljava/lang/Object;)Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/reflect/Method", "m" = "invoke", "desc" = "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/invoke/MethodHandle", "m" = "invoke", "desc" = "([Ljava/lang/Object;)Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/invoke/MethodHandle", "m" = "invokeExact", "desc" = "([Ljava/lang/Object;)Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/invoke/MethodHandle", "m" = "invokeWithArguments", "desc" = "(Ljava/util/List;)Ljava/lang/Object;", p = "SideEffectFree"},
          {cf = "java/lang/invoke/MethodHandle", "m" = "invokeWithArguments", "desc" = "([Ljava/lang/Object;)Ljava/lang/Object;", p = "SideEffectFree"}
        ]
      },
      ConfiguredNativeMethodsAnalysis {
        nativeMethods = [
          //////////////////////////////////////////////////////////////////////////////////////////
          //                                                                                      //
          // Reflection related methods                                                           //
          //                                                                                      //
          //////////////////////////////////////////////////////////////////////////////////////////
          {
            cf = "java/lang/Class",
            name = "forName",
            desc = "(Ljava/lang/String;)Ljava/lang/Class;"
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "forName",
                  desc = "(Ljava/lang/String;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "forName",
                  desc = "(Ljava/lang/String;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "forName",
            desc = "(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;"
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "forName",
                  desc = "(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "forName",
                  desc = "(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "forName",
            desc = "(Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class;"
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "forName",
                  desc = "(Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "forName",
                  desc = "(Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getConstantPool",
            desc = "()Ljdk/internal/reflect/ConstantPool;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getConstantPool",
                  desc = "()Ljdk/internal/reflect/ConstantPool;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getConstantPool",
                  desc = "()Ljdk/internal/reflect/ConstantPool;",
                  instantiatedType = "java/lang/reflect/ConstantPool"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getConstructor",
            desc = "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getConstructor",
                  desc = "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getConstructor",
                  desc = "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;",
                  instantiatedType = "java/lang/reflect/Constructor"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getConstructors",
            desc = "()[Ljava/lang/reflect/Constructor;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getConstructors",
                  desc = "()[Ljava/lang/reflect/Constructor;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getConstructors",
                  desc = "()[Ljava/lang/reflect/Constructor;",
                  instantiatedType = "[Ljava/lang/reflect/Constructor;",
                  arrayComponentTypes = ["java/lang/reflect/Constructor"]
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getDeclaredConstructor",
            desc = "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredConstructor",
                  desc = "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredConstructor",
                  desc = "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;",
                  instantiatedType = "java/lang/reflect/Constructor"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getDeclaredConstructors",
            desc = "()[Ljava/lang/reflect/Constructor;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredConstructors",
                  desc = "()[Ljava/lang/reflect/Constructor;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredConstructors",
                  desc = "()[Ljava/lang/reflect/Constructor;",
                  instantiatedType = "[Ljava/lang/reflect/Constructor;",
                  arrayComponentTypes = ["java/lang/reflect/Constructor"]
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getDeclaredField",
            desc = "(Ljava/lang/String;)Ljava/lang/reflect/Field;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredField",
                  desc = "(Ljava/lang/String;)Ljava/lang/reflect/Field;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredField",
                  desc = "(Ljava/lang/String;)Ljava/lang/reflect/Field;",
                  instantiatedType = "java/lang/reflect/Field"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getDeclaredFields",
            desc = "()[Ljava/lang/reflect/Field;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredFields",
                  desc = "()[Ljava/lang/reflect/Field;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredFields",
                  desc = "()[Ljava/lang/reflect/Field;",
                  instantiatedType = "[Ljava/lang/reflect/Field;",
                  arrayComponentTypes = ["java/lang/reflect/Field"]
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getDeclaredMethod",
            desc = "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredMethod",
                  desc = "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredMethod",
                  desc = "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;",
                  instantiatedType = "java/lang/reflect/Method"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getDeclaredMethods",
            desc = "()[Ljava/lang/reflect/Method;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredMethods",
                  desc = "()[Ljava/lang/reflect/Method;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getDeclaredMethods",
                  desc = "()[Ljava/lang/reflect/Method;",
                  instantiatedType = "[Ljava/lang/reflect/Method;",
                  arrayComponentTypes = ["java/lang/reflect/Method"]
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getField",
            desc = "(Ljava/lang/String;)Ljava/lang/reflect/Field;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getField",
                  desc = "(Ljava/lang/String;)Ljava/lang/reflect/Field;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getField",
                  desc = "(Ljava/lang/String;)Ljava/lang/reflect/Field;",
                  instantiatedType = "java/lang/reflect/Field"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getFields",
            desc = "()[Ljava/lang/reflect/Field;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getFields",
                  desc = "()[Ljava/lang/reflect/Field;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getFields",
                  desc = "()[Ljava/lang/reflect/Field;",
                  instantiatedType = "[Ljava/lang/reflect/Field;",
                  arrayComponentTypes = ["java/lang/reflect/Field"]
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getMethod",
            desc = "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getMethod",
                  desc = "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getMethod",
                  desc = "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;",
                  instantiatedType = "java/lang/reflect/Method"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getMethods",
            desc = "()[Ljava/lang/reflect/Method;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getMethods",
                  desc = "()[Ljava/lang/reflect/Method;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getMethods",
                  desc = "()[Ljava/lang/reflect/Method;",
                  instantiatedType = "[Ljava/lang/reflect/Method;",
                  arrayComponentTypes = ["java/lang/reflect/Method"]
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getPrimitiveClass",
            desc = "(Ljava/lang/String;)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getPrimitiveClass",
                  desc = "(Ljava/lang/String;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getPrimitiveClass",
                  desc = "(Ljava/lang/String;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "getProtectionDomain0",
            desc = "()Ljava/security/ProtectionDomain;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "getProtectionDomain0",
                  desc = "()Ljava/security/ProtectionDomain;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "getProtectionDomain0",
                  desc = "()Ljava/security/ProtectionDomain;",
                  instantiatedType = "java/security/ProtectionDomain"
                }
              }
            ]
          },
          {
            cf = "java/lang/Class",
            name = "cast",
            desc = "(Ljava/lang/Object;)Ljava/lang/Object;"
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Class",
                  name = "cast",
                  desc = "(Ljava/lang/Object;)Ljava/lang/Object;"
                },
                rhs = {
                  cf = "java/lang/Class",
                  name = "cast",
                  desc = "(Ljava/lang/Object;)Ljava/lang/Object;",
                  index = 1
                }
              }
            ]
          },
          {
            cf = "java/lang/invoke/MethodHandles",
            name = "lookup",
            desc = "()Ljava/lang/invoke/MethodHandles$Lookup;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/invoke/MethodHandles",
                  name = "lookup",
                  desc = "()Ljava/lang/invoke/MethodHandles$Lookup;"
                },
                rhs = {
                  cf = "java/lang/invoke/MethodHandles",
                  name = "lookup",
                  desc = "()Ljava/lang/invoke/MethodHandles$Lookup;",
                  instantiatedType = "java/lang/invoke/MethodHandles$Lookup"
                }
              }
            ]
          },
          {
            cf = "java/lang/invoke/MethodHandles$Lookup",
            name = "findStatic",
            desc = "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/invoke/MethodHandles$Lookup",
                  name = "findStatic",
                  desc = "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                },
                rhs = {
                  cf = "java/lang/invoke/MethodHandles$Lookup",
                  name = "findStatic",
                  desc = "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                  instantiatedType = "java/lang/invoke/MethodHandle"
                }
              }
            ]
          },
          {
            cf = "java/lang/invoke/MethodHandles$Lookup",
            name = "findVirtual",
            desc = "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/invoke/MethodHandles$Lookup",
                  name = "findVirtual",
                  desc = "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                },
                rhs = {
                  cf = "java/lang/invoke/MethodHandles$Lookup",
                  name = "findVirtual",
                  desc = "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                  instantiatedType = "java/lang/invoke/MethodHandle"
                }
              }
            ]
          },
          {
            cf = "java/lang/invoke/MethodHandles$Lookup",
            name = "findConstructor",
            desc = "(Ljava/lang/Class;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/invoke/MethodHandles$Lookup",
                  name = "findConstructor",
                  desc = "(Ljava/lang/Class;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                },
                rhs = {
                  cf = "java/lang/invoke/MethodHandles$Lookup",
                  name = "findConstructor",
                  desc = "(Ljava/lang/Class;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                  instantiatedType = "java/lang/invoke/MethodHandle"
                }
              }
            ]
          },
          {
            cf = "java/lang/invoke/MethodHandles$Lookup",
            name = "findSpecial",
            desc = "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/invoke/MethodHandles$Lookup",
                  name = "findSpecial",
                  desc = "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;",
                },
                rhs = {
                  cf = "java/lang/invoke/MethodHandles$Lookup",
                  name = "findSpecial",
                  desc = "(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;",
                  instantiatedType = "java/lang/invoke/MethodHandle"
                }
              }
            ]
          },
          {
            cf = "java/lang/ClassLoader",
            name = "defineClass0",
            desc = "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass0",
                  desc = "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass0",
                  desc = "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/ClassLoader",
            name = "defineClass0",
            desc = "(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/String;[BIILjava/security/ProtectionDomain;ZILjava/lang/Object;)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass0",
                  desc = "(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/String;[BIILjava/security/ProtectionDomain;ZILjava/lang/Object;)Ljava/lang/Class;",
                },
                rhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass0",
                  desc = "(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/String;[BIILjava/security/ProtectionDomain;ZILjava/lang/Object;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/ClassLoader",
            name = "defineClass1",
            desc = "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass1",
                  desc = "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass1",
                  desc = "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/ClassLoader",
            name = "defineClass1",
            desc = "(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass1",
                  desc = "(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass1",
                  desc = "(Ljava/lang/ClassLoader;Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/ClassLoader",
            name = "defineClass2",
            desc = "(Ljava/lang/String;Ljava/nio/ByteBuffer;IILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass2",
                  desc = "(Ljava/lang/String;Ljava/nio/ByteBuffer;IILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass2",
                  desc = "(Ljava/lang/String;Ljava/nio/ByteBuffer;IILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/ClassLoader",
            name = "defineClass2",
            desc = "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/nio/ByteBuffer;IILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass2",
                  desc = "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/nio/ByteBuffer;IILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/ClassLoader",
                  name = "defineClass2",
                  desc = "(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/nio/ByteBuffer;IILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/ClassLoader",
            name = "findBootstrapClass",
            desc = "(Ljava/lang/String;)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/ClassLoader",
                  name = "findBootstrapClass",
                  desc = "(Ljava/lang/String;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/ClassLoader",
                  name = "findBootstrapClass",
                  desc = "(Ljava/lang/String;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/ClassLoader",
            name = "findLoadedClass0",
            desc = "(Ljava/lang/String;)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/ClassLoader",
                  name = "findLoadedClass0",
                  desc = "(Ljava/lang/String;)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/ClassLoader",
                  name = "findLoadedClass0",
                  desc = "(Ljava/lang/String;)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/ClassLoader",
            name = "retrieveDirectives",
            desc = "()Ljava/lang/AssertionStatusDirectives;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/ClassLoader",
                  name = "retrieveDirectives",
                  desc = "()Ljava/lang/AssertionStatusDirectives;"
                },
                rhs = {
                  cf = "java/lang/ClassLoader",
                  name = "retrieveDirectives",
                  desc = "()Ljava/lang/AssertionStatusDirectives;",
                  instantiatedType = "java/lang/AssertionStatusDirectives"
                }
              }
            ]
          },
          {
            cf = "java/lang/SecurityManager",
            name = "currentClassLoader0",
            desc = "()Ljava/lang/ClassLoader;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/SecurityManager",
                  name = "currentClassLoader0",
                  desc = "()Ljava/lang/ClassLoader;"
                },
                rhs = {
                  cf = "java/lang/SecurityManager",
                  name = "currentClassLoader0",
                  desc = "()Ljava/lang/ClassLoader;",
                  instantiatedType = "java/lang/ClassLoader"
                }
              }
            ]
          },
          {
            cf = "java/lang/SecurityManager",
            name = "currentLoadedClass0",
            desc = "()Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/SecurityManager",
                  name = "currentLoadedClass0",
                  desc = "()Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/SecurityManager",
                  name = "currentLoadedClass0",
                  desc = "()Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          },
          {
            cf = "java/lang/System",
            name = "registerNatives",
            desc = "()V",
            methodInvocations = [
              { cf = "java/lang/System", name = "initializeSystemClass", desc = "()V" }
            ]
          },
          {
            // todo this behavior is partly based on Doop (which is based on Soot) and models
            // the current thread as initialized by Thread(ThreadGroup,String) with a new
            // ThreadGroup in order to model that the main thread is created using that constructor
            // with the main thread group (a thread group initialized by
            // ThreadGroup(ThreadGroup,String) as a child of the system thread group
            cf = "java/lang/Thread",
            name = "currentThread",
            desc = "()Ljava/lang/Thread;",
            methodInvocations = [
              {
                cf = "java/lang/Thread",
                name = "<init>",
                desc = "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V"
              },
              {
                cf = "java/lang/ThreadGroup",
                name = "<init>",
                desc = "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V"
              }
            ],
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Thread",
                  name = "<init>",
                  desc = "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V",
                  index = 0
                },
                rhs = {
                  cf = "java/lang/Thread",
                  name = "currentThread",
                  desc = "()Ljava/lang/Thread;",
                  instantiatedType = "java/lang/Thread"
                }
              },
              {
                lhs = {
                  cf = "java/lang/Thread",
                  name = "<init>",
                  desc = "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V",
                  index = 1
                },
                rhs = {
                  cf = "java/lang/Thread",
                  name = "currentThread",
                  desc = "()Ljava/lang/Thread;",
                  instantiatedType = "java/lang/ThreadGroup"
                }
              },
              {
                lhs = {
                  cf = "java/lang/ThreadGroup",
                  name = "<init>",
                  desc = "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V",
                  index = 0
                },
                rhs = {
                  cf = "java/lang/Thread",
                  name = "currentThread",
                  desc = "()Ljava/lang/Thread;",
                  instantiatedType = "java/lang/ThreadGroup"
                }
              },
              {
                lhs = {
                  cf = "java/lang/ThreadGroup",
                  name = "<init>",
                  desc = "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V",
                  index = 1
                },
                rhs = {
                  cf = "java/lang/Thread",
                  name = "currentThread",
                  desc = "()Ljava/lang/Thread;",
                  instantiatedType = "java/lang/ThreadGroup"
                }
              },
              {
                lhs = {
                  cf = "java/lang/Thread",
                  name = "currentThread",
                  desc = "()Ljava/lang/Thread;"
                },
                rhs = {
                  cf = "java/lang/Thread",
                  name = "currentThread",
                  desc = "()Ljava/lang/Thread;",
                  instantiatedType = "java/lang/Thread"
                }
              }
            ]
          },
          {
            cf = "java/lang/Thread",
            name = "dumpThreads",
            desc = "([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Thread",
                  name = "dumpThreads",
                  desc = "([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;"
                },
                rhs = {
                  cf = "java/lang/Thread",
                  name = "dumpThreads",
                  desc = "([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;",
                  instantiatedType = "[Ljava/lang/StackTraceElement;",
                  arrayComponentTypes = ["java/lang/StackTraceElement"]
                }
              }
            ]
          },
          {
            cf = "java/lang/Thread",
            name = "getThreads",
            desc = "()[Ljava/lang/Thread;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Thread",
                  name = "getThreads",
                  desc = "()[Ljava/lang/Thread;"
                },
                rhs = {
                  cf = "java/lang/Thread",
                  name = "getThreads",
                  desc = "()[Ljava/lang/Thread;",
                  instantiatedType = "[Ljava/lang/Thread;",
                  arrayComponentTypes = ["java/lang/Thread"]
                }
              }
            ]
          },
          {
            cf = "java/lang/Throwable",
            name = "getStackTraceElement",
            desc = "(I)Ljava/lang/StackTraceElement;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Throwable",
                  name = "getStackTraceElement",
                  desc = "(I)Ljava/lang/StackTraceElement;"
                },
                rhs = {
                  cf = "java/lang/Throwable",
                  name = "getStackTraceElement",
                  desc = "(I)Ljava/lang/StackTraceElement;",
                  instantiatedType = "java/lang/StackTraceElement"
                }
              }
            ]
          },
          {
            cf = "java/lang/reflect/Executable",
            name = "getParameters0",
            desc = "()[Ljava/lang/reflect/Parameter;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/reflect/Executable",
                  name = "getParameters0",
                  desc = "()[Ljava/lang/reflect/Parameter;"
                },
                rhs = {
                  cf = "java/lang/reflect/Executable",
                  name = "getParameters0",
                  desc = "()[Ljava/lang/reflect/Parameter;",
                  instantiatedType = "[Ljava/lang/reflect/Parameter;",
                  arrayComponentTypes = ["java/lang/reflect/Parameter"]
                }
              }
            ]
          },
          {
            cf = "java/lang/reflect/Proxy",
            name = "defineClass0",
            desc = "(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/reflect/Proxy",
                  name = "defineClass0",
                  desc = "(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;"
                },
                rhs = {
                  cf = "java/lang/reflect/Proxy",
                  name = "defineClass0",
                  desc = "(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;",
                  instantiatedType = "java/lang/Class"
                }
              }
            ]
          }

          //////////////////////////////////////////////////////////////////////////////////////////
          //                                                                                      //
          // java.lang.Object                                                                     //
          //                                                                                      //
          //////////////////////////////////////////////////////////////////////////////////////////
          {
            // we model clone as returning the identiy, i.e. PointsTo(ReturnValue) (>)= PointsTo(this)
            // todo this behavior is based on Doop (which is based on Soot) and models clone as identity
            cf = "java/lang/Object", name = "clone", desc = "()Ljava/lang/Object;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/lang/Object", name = "clone", desc = "()Ljava/lang/Object;"
                },
                rhs = {
                  cf = "java/lang/Object",
                  name = "clone",
                  desc = "()Ljava/lang/Object;",
                  index = 0 // this
                }
              }
            ]
          },
          //////////////////////////////////////////////////////////////////////////////////////////
          //                                                                                      //
          // java.lang.System                                                                     //
          //                                                                                      //
          //////////////////////////////////////////////////////////////////////////////////////////
          {
            // assigns its parameter to the field System.in
            cf = "java/lang/System", name = "setIn0", desc = "(Ljava/io/InputStream;)V",
            pointsTo = [
              {
                lhs = { cf = "java/lang/System", name = "in", fieldType = "Ljava/io/InputStream;" },
                rhs = {
                  cf = "java/lang/System",
                  name = "setIn0",
                  desc = "(Ljava/io/InputStream;)V",
                  index = 1
                }
              }
            ]
          },
          {
            // assigns its parameter to the field System.out
            cf = "java/lang/System", name = "setOut0", desc = "(Ljava/io/PrintStream;)V",
            pointsTo = [
              {
                lhs = { cf = "java/lang/System", name = "out", fieldType = "Ljava/io/PrintStream;" },
                rhs = {
                  cf = "java/lang/System",
                  name = "setOut0",
                  desc = "(Ljava/io/PrintStream;)V",
                  index = 1
                }
              }
            ]
          },
          {
            // assigns its parameter to the field System.err
            cf = "java/lang/System", name = "setErr0", desc = "(Ljava/io/PrintStream;)V",
            pointsTo = [
              {
                lhs = { cf = "java/lang/System", name = "err", fieldType = "Ljava/io/PrintStream;" },
                rhs = {
                  cf = "java/lang/System",
                  name = "setErr0",
                  desc = "(Ljava/io/PrintStream;)V",
                  index = 1
                }
              }
            ]
          },
          //////////////////////////////////////////////////////////////////////////////////////////
          //                                                                                      //
          // java.lang.ref.Reference                                                              //
          //                                                                                      //
          //////////////////////////////////////////////////////////////////////////////////////////
          {
            cf = "java/lang/ref/Reference", name = "<init>", desc = "(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V",
            pointsTo = [
              {
                lhs = { cf = "java/lang/ref/Reference", name = "pending", fieldType = "Ljava/lang/ref/Reference;" },
                rhs = {
                  cf = "java/lang/ref/Reference",
                  name = "<init>",
                  desc = "(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V",
                  index = 0
                }
              }
            ]
          },
          //////////////////////////////////////////////////////////////////////////////////////////
          //                                                                                      //
          // sun.misc.Perf                                                                        //
          //                                                                                      //
          //////////////////////////////////////////////////////////////////////////////////////////
          {
            cf = "sun/misc/Perf", name = "createLong", desc = "(Ljava/lang/String;IIJ)Ljava/nio/ByteBuffer;",
            pointsTo = [
              {
                lhs = {
                  cf = "sun/misc/Perf",
                  name = "createLong",
                  desc = "(Ljava/lang/String;IIJ)Ljava/nio/ByteBuffer;"
                },
                rhs = {
                  cf = "sun/misc/Perf",
                  name = "createLong",
                  desc = "(Ljava/lang/String;IIJ)Ljava/nio/ByteBuffer;"
                  instantiatedType = "java/nio/DirectByteBuffer"
                }
              }
            ]
          },
          //////////////////////////////////////////////////////////////////////////////////////////
          //                                                                                      //
          // java.io.FileSystem                                                                   //
          //                                                                                      //
          //////////////////////////////////////////////////////////////////////////////////////////
          {
            // todo this behavior is based on Doop and instantiates a UnixFileSystem
            cf = "java/io/FileSystem",
            name = "getFileSystem",
            desc = "()Ljava/io/FileSystem;",
            methodInvocations = [ { cf = "java/io/UnixFileSystem", name = "<init>", desc = "()V" } ],
            pointsTo = [
              {
                lhs = {
                  cf = "java/io/UnixFileSystem",
                  name = "<init>",
                  desc = "()V",
                  index = 0
                },
                rhs = {
                  cf = "java/io/FileSystem",
                  name = "getFileSystem",
                  desc = "()Ljava/io/FileSystem;",
                  instantiatedType = "java/io/UnixFileSystem"
                }
              },
              {
                lhs = {
                  cf = "java/io/FileSystem",
                  name = "getFileSystem",
                  desc = "()Ljava/io/FileSystem;",
                },
                rhs = {
                  cf = "java/io/FileSystem",
                  name = "getFileSystem",
                  desc = "()Ljava/io/FileSystem;",
                  instantiatedType = "java/io/UnixFileSystem"
                }
              }
            ]
          },
          {
            // todo this behavior is based on Doop and instantiates a UnixFileSystem
            cf = "java/io/UnixFileSystem",
            name = "list",
            desc = "(Ljava/io/File;)[Ljava/lang/String;",
            pointsTo = [
              {
                lhs = {
                  cf = "java/io/UnixFileSystem",
                  name = "list",
                  desc = "(Ljava/io/File;)[Ljava/lang/String;"
                },
                rhs = {
                  cf = "java/io/UnixFileSystem",
                  name = "list",
                  desc = "(Ljava/io/File;)[Ljava/lang/String;",
                  instantiatedType = "[Ljava/lang/String;",
                  arrayComponentTypes = ["java/lang/String"]
                }
              }
            ]
          }
        ]
      },
      AllocationSiteBasedPointsToAnalysis = {
        mergeStringBuilderBuffer = true,
        mergeStringConstants = true,
        mergeClassConstants = true,
        mergeExceptions = true
      },
      cg.reflection.ReflectionRelatedCallsAnalysis.highSoundness = false
    }
  },
  tac.cg {
    CallGraphKey {
      modules = [
        "org.opalj.tac.fpcf.analyses.cg.FinalizerAnalysisScheduler",
        "org.opalj.tac.fpcf.analyses.cg.LoadedClassesAnalysisScheduler",
        "org.opalj.tac.fpcf.analyses.cg.StaticInitializerAnalysisScheduler",
        "org.opalj.tac.fpcf.analyses.cg.reflection.ReflectionRelatedCallsAnalysisScheduler",
        "org.opalj.tac.fpcf.analyses.cg.SerializationRelatedCallsAnalysisScheduler",
        "org.opalj.tac.fpcf.analyses.cg.ThreadRelatedCallsAnalysisScheduler",
        "org.opalj.tac.fpcf.analyses.cg.DoPrivilegedAnalysisScheduler",
        "org.opalj.tac.fpcf.analyses.cg.ConfiguredNativeMethodsCallGraphAnalysisScheduler",
        #"org.opalj.tac.fpcf.analyses.SystemPropertiesAnalysisScheduler"
      ]
    }
  }
}
